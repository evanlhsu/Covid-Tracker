{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","images/image.png","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","covidData","type","title","description","styleName","desciption","className","styles","container","Grid","spacing","justify","map","cardData","i","item","component","Card","xs","md","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changableUrl","axios","get","console","log","fetchDailyData","modifiedData","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ea6d1af1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nimport styles from './Cards.module.css';\n\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n  const covidData = [\n    { type: confirmed, title: 'Infected', description: 'Number of active cases of COVID-19', styleName: 'infected' },\n    { type: recovered, title: 'Recovered', description: 'Number of recoveries from COVID-19', styleName: 'recovered' },\n    { type: deaths, title: 'Deaths', desciption: 'Number of deaths caused by COVID-19', styleName: 'deaths' }\n  ];\n\n  const uniqueStyle = (styleName) => {\n    if (styleName == 'infected') {\n      return styles.infected;\n    } else if (styleName == 'recovered') {\n      return styles.recovered;\n    } else {\n      return styles.deaths;\n    }\n  }\n\n  if (!confirmed) {\n    return 'Loading...';\n  }\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3} justify=\"center\">\n        {covidData.map((cardData, i) => {\n          const style = cardData.styleName;\n          return (\n            <Grid item key={i} component={Card} xs={12} md={3} className={`${styles.card} ${uniqueStyle(cardData.styleName)}`}>\n            <CardContent>\n              <Typography color=\"textSecondary\" gutterBottom>{cardData.title}</Typography>\n              <Typography variant=\"h5\">\n                <CountUp start={0} end={cardData.type.value} duration={2.5} separator=\",\" />\n              </Typography>\n              <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n              <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\n            </CardContent>\n            </Grid>\n          )\n        })}\n      </Grid>\n    </div>\n  )\n}\n\nexport default Cards;","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n  let changableUrl = url;\n\n  if (country) {\n    changableUrl = `${url}/countries/${country}`;\n  }\n\n  try {\n    const { data: {confirmed, recovered, deaths, lastUpdate } } = await axios.get(changableUrl);\n    return { confirmed, recovered, deaths, lastUpdate, };\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`);\n    const modifiedData = data.map((dailyData) => ({\n      confirmed: dailyData.confirmed.total,\n      deaths: dailyData.deaths.total,\n      date: dailyData.reportDate,\n    }))\n\n    return modifiedData;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport const fetchCountries = async () => {\n  try {\n    const { data: { countries }} = await axios.get(`${url}/countries`);\n    return countries.map((country) => country.name);\n  } catch (error) {\n    console.log(error);\n  }\n}","import React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\n\nimport styles from './Chart.module.css';\n\nconst Chart = ({ data: { confirmed, deaths, recovered }, country }) => {\n  const [dailyData, setDailyData] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    }\n\n    fetchAPI();\n  }, []);\n\n  const lineChart = (\n    dailyData.length\n    ? (<Line\n      data={{\n        labels: dailyData.map(({ date }) => date),\n        datasets: [{\n          data: dailyData.map(({ confirmed }) => confirmed),\n          label: 'Infected',\n          borderColor: '#3333ff',\n          fill: true,\n        }, {\n          data: dailyData.map(({ deaths }) => deaths),\n          label: 'Deaths',\n          borderColor: 'red',\n          backgroundColor: 'rgba(255, 0, 0, 0.5)',\n          fill: true,\n        }],\n      }}\n    />) : null\n  );\n\n  const barChart = (\n    confirmed\n      ? (\n        <Bar\n          data={{\n            labels: ['Infected', 'Recovered', 'Deaths'],\n            datasets: [{\n              label: 'People',\n              backgroundColor: [\n                'rgba(0, 0, 255, 0.5)',\n                'rgba(0, 255, 0, 0.5)',\n                'rgba(255, 0, 0, 0.5)',\n              ],\n              data: [confirmed.value, recovered.value, deaths.value]\n            }]\n          }}\n          options={{\n            legend: { display: false },\n            title: { display: true, text: `Current state in ${country}`} \n          }}\n        />\n      ) : null\n  )\n\n  return (\n    <div className={styles.container}>\n      {country ? barChart : lineChart }\n    </div>\n  )\n}\n\nexport default Chart;","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\n\nimport styles from './CountryPicker.module.css';\n\nimport { fetchCountries } from '../../api';\n\nconst CountryPicker = ({ handleCountryChange }) => {\n  const [fetchedCountries, setFetchedCountries] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setFetchedCountries(await fetchCountries());\n    }\n\n    fetchAPI();\n  }, [setFetchedCountries]);\n\n  return (\n    <FormControl className={styles.formControl}>\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n        <option value=\"\">Global</option>\n        {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n      </NativeSelect>\n    </FormControl>\n  )\n}\n\nexport default CountryPicker;","export default __webpack_public_path__ + \"static/media/image.9e5d4fc7.png\";","import React from 'react';\n\nimport { Cards, Chart, CountryPicker } from './components';\nimport styles from './App.module.css';\nimport { fetchData } from './api';\n\nimport coronaImage from './images/image.png';\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: '',\n  }\n\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n    this.setState({ data: fetchedData })\n  }\n\n  handleCountryChange = async (country) => {\n    const fetchedData = await fetchData(country);\n\n    this.setState({ data: fetchedData, country: country });\n  }\n\n  render() {\n    const { data, country } = this.state;\n\n    return (\n      <div className={styles.container}>\n        <img className={styles.image} src={coronaImage} alt=\"COVID-19\" />\n        <Cards data={data}/>\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Chart data={data} country={country} />\n      </div>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};"],"sourceRoot":""}